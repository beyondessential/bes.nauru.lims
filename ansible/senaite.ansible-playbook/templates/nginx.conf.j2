# Ansible Managed NGINX Configuration

user  {{ nginx_user }};

error_log  {{ nginx_error_log }};
pid        {{ nginx_pidfile }};

worker_processes  {{ nginx_worker_processes }};

events {
    worker_connections  {{ nginx_worker_connections }};
    multi_accept {{ nginx_multi_accept }};
}

{% if nginx_extra_conf_options %}
{{ nginx_extra_conf_options }}
{% endif %}

http {
    include       {{ nginx_mime_file_path }};
    default_type  application/octet-stream;

    server_names_hash_bucket_size {{ nginx_server_names_hash_bucket_size }};

    client_max_body_size {{ nginx_client_max_body_size }};
    client_body_buffer_size {{ nginx_client_body_buffer_size }};

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  {{ nginx_access_log }};

    gzip            {{ nginx_gzip }};
    sendfile        {{ nginx_sendfile }};
    tcp_nopush      {{ nginx_tcp_nopush }};
    tcp_nodelay     {{ nginx_tcp_nodelay }};

    keepalive_timeout  {{ nginx_keepalive_timeout }};
    keepalive_requests {{ nginx_keepalive_requests }};

{% if nginx_extra_http_options %}
    # Extra Options
    {{ nginx_extra_http_options }}
{% endif %}

    upstream haproxy {
        server 127.0.0.1:{{ haproxy_frontend_port }};
    }

{% for upstream in nginx_upstreams %}
    upstream {{ upstream.name }} {
{% if upstream.strategy is defined %}
        {{ upstream.strategy }};
{% endif %}
{% for server in upstream.servers %}
        server {{ server }};
{% endfor %}
    }
{% endfor %}

    proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=senaite_nginx_cache:10m max_size=1024m inactive=1d use_temp_path=off;
    proxy_cache_key "$scheme$host$request_uri";

    include {{ nginx_conf_path }}/*.conf;
{% if nginx_conf_path != nginx_vhost_path %}
    include {{ nginx_vhost_path }}/*;
{% endif %}
}
